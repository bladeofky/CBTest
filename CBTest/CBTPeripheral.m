//
//  CBTPeripheral.m
//  CBTest
//
//  Created by Alan Wang on 12/17/14.
//  Copyright (c) 2014 Alan Wang. All rights reserved.
//

#import "CBTPeripheral.h"

@interface CBTPeripheral ()

@property (nonatomic, strong) CBPeripheralManager *peripheralManager;

@end

@implementation CBTPeripheral

#pragma mark - Accessors
- (CBPeripheralManager *)peripheralManager
{
    if (!_peripheralManager) {
        _peripheralManager = [[CBPeripheralManager alloc]initWithDelegate:self
                                                                    queue:nil
                                                                  options:nil];
    }
    
    return _peripheralManager;
}

#pragma mark -
-(void)setupPeripheralandAdvertiseService
{
    
    // Define custom UUIDs. These are randomly generated by calling uuidgen on terminal.
    NSString *characteristicUUIDString = @"5F524D49-AE0E-4AD8-99DF-2335E3F435EC";
    NSString *serviceUUIDString = @"5D3C11B7-4016-4DC2-908F-AB151C27B4FD";
    
    // Create UUID objects
    CBUUID *serviceUUID = [CBUUID UUIDWithString:serviceUUIDString];
    CBUUID *characteristicUUID = [CBUUID UUIDWithString:characteristicUUIDString];
    
    // Create characteristics
    NSString *stringToSend = @"Success!";
    NSData *dataToSend = [stringToSend dataUsingEncoding:NSUTF8StringEncoding];
    CBMutableCharacteristic *characteristic = [[CBMutableCharacteristic alloc]initWithType:characteristicUUID
                                                                                properties:CBCharacteristicPropertyRead
                                                                                     value:dataToSend
                                                                               permissions:CBAttributePermissionsReadable];

    // Create service
    CBMutableService *service = [[CBMutableService alloc]initWithType:serviceUUID primary:YES];
    service.characteristics = @[characteristic];

    // Publish service. After this service and characteristic are cached and can no longer be changed.
    [self.peripheralManager addService:service];
    
    // Begin advertising service
    [self.peripheralManager startAdvertising:@{ CBAdvertisementDataServiceUUIDsKey : @[serviceUUID] }];
    
}

#pragma mark - CBPeripheralManagerDelegate

-(void)peripheralManagerDidUpdateState:(CBPeripheralManager *)peripheral
{
    NSLog(@"Peripheral manager did update state");
}

-(void)peripheralManager:(CBPeripheralManager *)peripheral didAddService:(CBService *)service error:(NSError *)error
{
    if (error) {
        NSLog(@"Error publishing service: %@", [error localizedDescription]);
    }
    else {
        NSLog(@"Successfully published service with UUID: %@", service.UUID.UUIDString);
    }
}

-(void)peripheralManagerDidStartAdvertising:(CBPeripheralManager *)peripheral error:(NSError *)error
{
    if (error) {
        NSLog(@"Error advertising services: %@", [error localizedDescription]);
    }
    else {
        NSLog(@"Began advertising services");
    }
}

@end
